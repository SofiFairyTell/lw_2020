#ifndef __FFT_H__
#define __FFT_H__

/**
  \file
  Быстрое преобразоание Фурье
  
  (<i>Прямым</i>) <i>дискретным преобразованием Фурье</i> называют 
  отображение \f$\varphi: {\bf C}^n \to {\bf C}^n\f$,
  ставящее в соответствие вектору \f$x=(x_0, x_1, \dots, x_{n-1})\f$
  вектор \f$\widehat{x}=(\widehat{x}_0,\widehat{x}_1,\dots,\widehat{x}_{n-1})\f$, где
  \f$\widehat{x}_k = \displaystyle\sum_{j=0}^{n-1} x_j e^{\displaystyle-\frac{jk2\pi i}{n}}\f$
  \f$(k=0,1,\dots,n-1)\f$.

  Обратное отображение \f$\varphi^{-1}\f$ называется 
  <i>обратным дискретным преобразованием Фурье</i>.
  Его можно вычислить по формулам
  \f$x_j = \frac{\displaystyle 1}{\displaystyle n} \displaystyle\sum_{k=0}^{n-1} \widehat{x}_k e^{\displaystyle\frac{jk2\pi i}{n}}\f$
  \f$(j=0,1,\dots,n-1)\f$.

  <i>Быстрое преобразование Фурье</i> - это эффективный способ вычисления
  прямого и обратного преобразований Фурье. В библиотеке реализован алгоритм
  быстрого преобразования Фурье для случая, когда \f$n\f$ - степень двойки.
  Чтобы использовать функции для векторов другой длины, необходимо дописать к
  векторам нулевые компоненты.
*/

/**
  \example xfft.c
*/


/**
  Прямое быстрое преобразование Фурье для вектора \f$x\f$ длины \f$n\f$.
  Действительные части вектора \f$x\f$ задаются в массиве \f$re\f$,
  мнимые части - в массиве \f$im\f$,
  \f$n\f$ должно быть степенью двойки.
  Результат возвращается в векторах \f$re\f$ и \f$im\f$.
*/
extern void fft_transform(double* re, double* im, size_t n);


/**
  Обратное быстрое преобразование Фурье для вектора \f$x\f$ длины \f$n\f$.
  Действительные части вектора \f$x\f$ задаются в массиве \f$re\f$,
  мнимые части - в массиве \f$im\f$,
  \f$n\f$ должно быть степенью двойки.
  Результат возвращается в векторах \f$re\f$ и \f$im\f$.
*/
extern void fft_inverse(double* re, double* im, size_t n);

#endif
