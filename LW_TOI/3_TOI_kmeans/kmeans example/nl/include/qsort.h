#ifndef __QSORT_H__
#define __QSORT_H__ 

/**
  \file
  Быстрая сортировка.
  
  Файл содержит функции, реализующие алгоритм быстрой сортировки Хоара 
  (C.A.R.Hoar's quick sort). Используется в модуле sparse.h
*/

/**
  \example xqsort.c
*/

/**
  Функция сортирует массив данных в порядке возрастания.

  - Вход:  
	- \f$data\f$  - указатель на данные
	- \f$n\f$     - количество элементов в массиве
	- \f$compare\f$  - указатель на пользовательскую функцию, сравнивающую два
                           элемента массива; функция имеет три аргумента: первые два -
                           индексы сравниваемых элементов, последний аргумент -
                           указатель на данные; функция должна возвращать \f$-1\f$, \f$0\f$ 
                           или \f$1\f$, когда первый из сравниваемых элементов меньше 
                           второго, равен второму или соответственно больше второго
	- \f$swap\f$ - указатель на пользовательскую функцию, переставляющую указанные 
                       элементы массива; функция имеет три аргумента: первые два -    
                       индексы сравниваемых элементов, последний аргумент -           
                       указатель на данные                                              
  - Выход: 
	- \f$data\f$ - указатель на данные, отсортированные в порядке возрастания
*/
extern void nl_qsort(
  void* data,
  size_t n, 
  int (*compare)(size_t, size_t, void*),
  void (*swap)(size_t, size_t, void*));


#endif
