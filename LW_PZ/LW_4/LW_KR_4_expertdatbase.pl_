:-op(100,xfx,[это,учится_на,сдал]).
:-dynamic это/2.
:-dynamic учится_на/2.
:-dynamic сдал/2.

%база данных
Студент это отличник:-Студент это без_хвостов, Студент учится_на пятерки.
Студент это хорошист:-Студент это без_хвостов, Студент учится_на четверки.
Студент это без_хвостов:-Студент сдал зачеты, Студент сдал экзамены.
%входные данные
сергей сдал зачеты.
сергей сдал экзамены.
сергей учится_на хорошист.
%процедура выполнить формирует объяснение
%для каждого типа правила "ЭТО" отдельное предложение выполнить
выполнить(true,'есть в программе'):-!.
выполнить((A,B),(P1,P2)):-!,выполнить(A,P1),выполнить(B,P2).
выполнить((A;B),(P1;P2)):-!,выполнить(A,P1),выполнить(B,P2).
выполнить((A,(B;C)),(P1,P2;P3)):-!,выполнить(A,P1),(выполнить(B,P2);выполнить(C,P3)).
выполнить(A,потому_что(A,P1)):-clause(A,Тело),выполнить(Тело,P1).

